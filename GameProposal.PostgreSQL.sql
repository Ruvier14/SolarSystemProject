
START TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ WRITE;

CREATE SCHEMA IF NOT EXISTS ORMModel1;

SET search_path TO ORMMODEL1,"$user",public;

CREATE TABLE ORMModel1."User"
(
	userID SERIAL NOT NULL,
	userName CHARACTER VARYING NOT NULL,
	addressName CHARACTER VARYING,
	ageNr INTEGER,
	"crediCardInfo#" INTEGER,
	locationName CHARACTER VARYING,
	name CHARACTER VARYING,
	CONSTRAINT User_PK PRIMARY KEY(userID)
);

CREATE TABLE ORMModel1.Tags
(
	tagsID SERIAL NOT NULL,
	CONSTRAINT Tags_PK PRIMARY KEY(tagsID)
);

CREATE TABLE ORMModel1.UserAccessDigitalDistThatHasTags
(
	digitalDistName CHARACTER VARYING(20) NOT NULL,
	tagsID INTEGER NOT NULL,
	userID INTEGER NOT NULL,
	CONSTRAINT UserAccessDigitalDistThatHasTags_PK PRIMARY KEY(digitalDistName, tagsID)
);

CREATE TABLE ORMModel1.Genre
(
	genreID SERIAL NOT NULL,
	actionCode CHARACTER(20) NOT NULL,
	adventureCode CHARACTER(20) NOT NULL,
	playerSupportCode CHARACTER(10) NOT NULL,
	rolePlayingCode CHARACTER(10) NOT NULL,
	simulationCode CHARACTER(20) NOT NULL,
	THEMESCode CHARACTER(20) NOT NULL,
	digitalDistName CHARACTER VARYING(20),
	CONSTRAINT Genre_PK PRIMARY KEY(genreID),
	CONSTRAINT Genre_UC1 UNIQUE(actionCode),
	CONSTRAINT Genre_UC2 UNIQUE(rolePlayingCode),
	CONSTRAINT Genre_UC3 UNIQUE(playerSupportCode),
	CONSTRAINT Genre_UC4 UNIQUE(THEMESCode),
	CONSTRAINT Genre_UC5 UNIQUE(adventureCode),
	CONSTRAINT Genre_UC6 UNIQUE(simulationCode)
);

CREATE TABLE ORMModel1.OSVersion
(
	OSVersionName CHARACTER VARYING(10) NOT NULL,
	linuxOSName CHARACTER VARYING(10) NOT NULL,
	macOsName CHARACTER VARYING(10) NOT NULL,
	windowsName CHARACTER VARYING(20) NOT NULL,
	userID INTEGER,
	CONSTRAINT OSVersion_PK PRIMARY KEY(OSVersionName)
);

CREATE TABLE ORMModel1.LinuxOS
(
	linuxOSName CHARACTER VARYING(10) NOT NULL,
	regLinuxName CHARACTER VARYING(10),
	steamOSwLinuxName CHARACTER VARYING(20),
	CONSTRAINT LinuxOS_PK PRIMARY KEY(linuxOSName),
	CONSTRAINT LinuxOS_UC1 UNIQUE(steamOSwLinuxName),
	CONSTRAINT LinuxOS_UC2 UNIQUE(regLinuxName)
);

CREATE TABLE ORMModel1.OSVersionIsUnderGenreThatAccessDigitalDist
(
	digitalDistName CHARACTER VARYING(20) NOT NULL,
	genreID INTEGER NOT NULL,
	OSVersionName CHARACTER VARYING(10) NOT NULL,
	CONSTRAINT OSVersionIsUnderGenreThatAccessDigitalDist_PK PRIMARY KEY(genreID, digitalDistName)
);

CREATE TABLE ORMModel1.Simulation
(
	simulationCode CHARACTER(20) NOT NULL,
	subSimGenreCode CHARACTER(20) NOT NULL,
	CONSTRAINT Simulation_PK PRIMARY KEY(simulationCode)
);

CREATE TABLE ORMModel1.ThemesSubGenre
(
	themesSubGenreCode CHARACTER(20) NOT NULL,
	THEMESCode CHARACTER(20) NOT NULL,
	CONSTRAINT ThemesSubGenre_PK PRIMARY KEY(themesSubGenreCode)
);

CREATE TABLE ORMModel1.AdventureSubGenre
(
	adventureSubGenreCode CHARACTER(20) NOT NULL,
	adventureCode CHARACTER(20) NOT NULL,
	CONSTRAINT AdventureSubGenre_PK PRIMARY KEY(adventureSubGenreCode)
);

CREATE TABLE ORMModel1.PlayerSupSubGenre
(
	playerSupSubGenreCode CHARACTER(10) NOT NULL,
	playerSupportCode CHARACTER(10) NOT NULL,
	CONSTRAINT PlayerSupSubGenre_PK PRIMARY KEY(playerSupSubGenreCode)
);

CREATE TABLE ORMModel1.RPSubGenre
(
	RPSubGenreCode CHARACTER(20) NOT NULL,
	rolePlayingCode CHARACTER(10) NOT NULL,
	CONSTRAINT RPSubGenre_PK PRIMARY KEY(RPSubGenreCode)
);

CREATE TABLE ORMModel1.ActionSubGenre
(
	actionSubGenreCode CHARACTER(20) NOT NULL,
	actionCode CHARACTER(20) NOT NULL,
	CONSTRAINT ActionSubGenre_PK PRIMARY KEY(actionSubGenreCode)
);

CREATE TABLE ORMModel1.CrediCardInfo
(
	"crediCardInfo#" SERIAL NOT NULL,
	CONSTRAINT CrediCardInfo_PK PRIMARY KEY("crediCardInfo#")
);

ALTER TABLE ORMModel1."User" ADD CONSTRAINT User_FK FOREIGN KEY ("crediCardInfo#") REFERENCES ORMModel1.CrediCardInfo ("crediCardInfo#") ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ORMModel1.UserAccessDigitalDistThatHasTags ADD CONSTRAINT UserAccessDigitalDistThatHasTags_FK1 FOREIGN KEY (userID) REFERENCES ORMModel1."User" (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ORMModel1.UserAccessDigitalDistThatHasTags ADD CONSTRAINT UserAccessDigitalDistThatHasTags_FK2 FOREIGN KEY (tagsID) REFERENCES ORMModel1.Tags (tagsID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ORMModel1.Genre ADD CONSTRAINT Genre_FK FOREIGN KEY (simulationCode) REFERENCES ORMModel1.Simulation (simulationCode) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ORMModel1.OSVersion ADD CONSTRAINT OSVersion_FK1 FOREIGN KEY (userID) REFERENCES ORMModel1."User" (userID) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ORMModel1.OSVersion ADD CONSTRAINT OSVersion_FK2 FOREIGN KEY (linuxOSName) REFERENCES ORMModel1.LinuxOS (linuxOSName) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ORMModel1.OSVersionIsUnderGenreThatAccessDigitalDist ADD CONSTRAINT OSVersionIsUnderGenreThatAccessDigitalDist_FK1 FOREIGN KEY (OSVersionName) REFERENCES ORMModel1.OSVersion (OSVersionName) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE ORMModel1.OSVersionIsUnderGenreThatAccessDigitalDist ADD CONSTRAINT OSVersionIsUnderGenreThatAccessDigitalDist_FK2 FOREIGN KEY (genreID) REFERENCES ORMModel1.Genre (genreID) ON DELETE RESTRICT ON UPDATE RESTRICT;

COMMIT WORK;
